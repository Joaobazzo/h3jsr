% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/h3_algorithms.R
\name{h3_get_kring}
\alias{h3_get_kring}
\title{get nearby H3 addresses}
\usage{
h3_get_kring(h3_address = NULL, ring_size = 1, simple = TRUE)
}
\arguments{
\item{h3_address}{Character; 15-character address generated by H3.}

\item{ring_size}{Character; number of steps away from the central address.
Defaults to 1.}

\item{simple}{Logical; whether to return a vector of outputs or a data frame
containing both inputs and outputs.}
}
\value{
By default, a list of length(h3_address). Each list element contains
  a character vector of H3 addresses.
}
\description{
This function returns all the H3 addresses within a specified number of
steps from the address supplied.
}
\note{
While the parent function name `kRing` may imply returning a donut of
  addresses, it actually returns a patch centered on the input. The number of
  addresses returned for each input address conforms to the [centered
  hexagonal number
  sequence](https://en.wikipedia.org/wiki/Centered_hexagonal_number), so at
  `ring_size = 5`, 91 addresses are returned. The first address returned is
  the input address, the rest follow in a spiral anticlockwise order.
}
\examples{
# What are all the neighbours of this address within two steps?
h3_get_kring(h3_address = '86be8d12fffffff', ring_size = 2)
}
