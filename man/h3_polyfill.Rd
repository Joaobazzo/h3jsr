% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/h3_algorithms.R
\name{h3_polyfill}
\alias{h3_polyfill}
\title{get H3 addresses within a polygon}
\usage{
h3_polyfill(geometry = NULL, res = NULL, simple = TRUE)
}
\arguments{
\item{geometry}{`sf` object of type 'POLYGON'.}

\item{res}{Integer; Desired H3 resolution. See
https://uber.github.io/h3/#/documentation/core-library/resolution-table for
allowable values and related dimensions.}

\item{simple}{Logical; whether to return a vector of outputs or an sf object
containing both inputs and outputs.}
}
\value{
By default, a list of length(h3_address). Each list element contains
  a character vector of H3 addresses belonging to that polygon. A result of
  NA indicates that no h3 addresses of the chosen resolution are centered
  over the polygon.
}
\description{
This function returns all the H3 addresses within the supplied polygon
geometry.
}
\note{
This function will be slow with a large number of polygons, and/or
  polygons that are large relative to the hexagon area at the chosen
  resolution.
}
\examples{
# Which level 5 H3 addresses have centers inside County Ashe, NC?
nc <- sf::st_read(system.file("shape/nc.shp", package="sf"), quiet = TRUE)
nc1 <- nc[1, ]
nc1 <- sf::st_cast(nc1, 'POLYGON')
fillers <- h3_polyfill(geometry = nc1, res = 5)
}
