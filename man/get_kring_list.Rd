% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/h3_algorithms.R
\name{get_kring_list}
\alias{get_kring_list}
\title{Get nearby H3 addresses separated by distance}
\usage{
get_kring_list(h3_address = NULL, ring_size = 1, simple = TRUE)
}
\arguments{
\item{h3_address}{Character; 15-character address generated by H3.}

\item{ring_size}{Character; number of steps away from the central address.
Defaults to 1.}

\item{simple}{Logical; whether to return a vector of outputs or a data frame
containing both inputs and outputs.}
}
\value{
By default, a list of length(h3_address). Each list element contains
  a list of `length(ring_size + 1)`. Each of those lists contains a character
  vector of H3 addresses belonging to that step away from the input address.
}
\description{
This function returns all the H3 addresses within a specified number of steps
from the address supplied, grouped by step.
}
\note{
In total, the number of addresses returned for each input address
  conforms to the [centered hexagonal number
  sequence](https://en.wikipedia.org/wiki/Centered_hexagonal_number), so at
  `ring_size = 5`, 91 addresses are returned. Addresses are returned in
  separate lists, one for each step.
}
\examples{
# What are the nested neighbours of this address within two steps?
get_kring_list(h3_address = '86be8d12fffffff', ring_size = 2)
}
