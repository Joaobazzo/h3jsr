% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/custom_fuctions.R
\name{h3_to_line}
\alias{h3_to_line}
\title{Convert H3 addresses to a line}
\usage{
h3_to_line(input = NULL, simple = TRUE)
}
\arguments{
\item{input}{Character; 15-character address generated by H3, or a vector or
list of same, or a data frame where the last column is a list-column of H3
addresses (usually the output of
\code{\link[h3jsr:grid_path]{h3jsr::grid_path()}}.}

\item{simple}{Logical; whether to return an `sfc_LINESTRING` object or an `sf`
data frame containing both inputs and outputs.}
}
\value{
By default, an `sfc_LINESTRING` object of `length(input)`. If an
  appropriately formatted data frame is supplied, an `sf` data frame
  containing input attributes and geometry.
}
\description{
Return line geometry for a sequence of H3 addresses in WGS84 coordinates.
}
\examples{
# What is the hexagon over the Brisbane Town Hall at resolution 10?
brisbane_hex_10 <- h3_to_polygon(input = '8abe8d12acaffff')

# Give me a some nearby hexagons
hex_sample <- get_kring_list('8abe8d12acaffff', 4)[[1]][[4]][seq(1,18,3)]
hex_sample_polys <- h3_to_polygon(hex_sample)

# find connecting paths
paths <- grid_path(rep('8abe8d12acaffff', 6), hex_sample)

# make lines
lines <- h3_to_line(paths)

\dontrun{
plot(hex_sample_polys, reset = FALSE)
plot(brisbane_hex_10, add = TRUE)
plot(lines, col = 'red', add = TRUE)
}

}
